{"version":3,"file":"index.js","sources":["pages/index/index.vue","D:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvaW5kZXgudnVl"],"sourcesContent":["<template>\n  <view class=\"chat-page\">\n    <!-- 侧边弹出层（从左向右滑出） -->\n    <view \n      class=\"sidebar-mask\" \n      v-if=\"showSidebar\"\n      @click=\"toggleSidebar\"\n    ></view>\n    <view \n      class=\"sidebar\" \n      v-if=\"showSidebar\"\n      :class=\"{ slideIn: showSidebar }\"\n    >\n      <view class=\"sidebar-header\">\n        <text class=\"sidebar-title\">功能菜单</text>\n        <button class=\"close-btn\" @click=\"toggleSidebar\">✕</button>\n      </view>\n      <view class=\"sidebar-menu\">\n        <view class=\"menu-item\" @click=\"clearHistory\">\n          <text class=\"menu-icon\">🗑️</text>\n          <text class=\"menu-text\">清空聊天记录</text>\n        </view>\n        <view class=\"menu-item\" @click=\"switchTheme\">\n          <text class=\"menu-icon\">🎨</text>\n          <text class=\"menu-text\">切换主题</text>\n        </view>\n        <view class=\"menu-item\" @click=\"showSettings\">\n          <text class=\"menu-icon\">⚙️</text>\n          <text class=\"menu-text\">设置</text>\n        </view>\n        <view class=\"menu-item\" @click=\"showAbout\">\n          <text class=\"menu-icon\">ℹ️</text>\n          <text class=\"menu-text\">关于</text>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 顶部导航栏（左侧为三道杠按钮） -->\n    <view class=\"chat-header\">\n      <button class=\"menu-trigger\" @click=\"toggleSidebar\">\n        <text class=\"hamburger\">☰</text>\n      </button>\n      <view class=\"header-content\">\n        <text class=\"header-title\">聊天</text>\n      </view>\n      <view class=\"header-placeholder\"></view> <!-- 占位元素，保持标题居中 -->\n    </view>\n    \n    <!-- 聊天内容区域 -->\n    <scroll-view \n      class=\"chat-container\" \n      scroll-y \n      :scroll-top=\"scrollTop\"\n      :style=\"{ transform: showSidebar ? 'translateX(70%)' : 'translateX(0)' }\"\n      @scroll=\"onScroll\"\n    >\n      <!-- 时间分割线 -->\n      <view class=\"time-divider\" v-if=\"showTimeDivider\">\n        <text>{{ formatTime(new Date()) }}</text>\n      </view>\n      \n      <!-- 欢迎消息 -->\n      <view class=\"message-item ai-message\" v-if=\"messages.length === 0\">\n        <view class=\"avatar\">\n          <image src=\"/static/ai-avatar.png\" mode=\"widthFix\"></image>\n        </view>\n        <view class=\"message-bubble\">\n          <text>你好！我是你的助手，有什么可以帮助你的吗？</text>\n        </view>\n      </view>\n      \n      <!-- 消息列表 -->\n      <view \n        v-for=\"(msg, index) in messages\" \n        :key=\"index\" \n        :class=\"['message-item', msg.isUser ? 'user-message' : 'ai-message']\"\n      >\n        <view class=\"avatar\">\n          <image \n            :src=\"msg.isUser ? '/static/user-avatar.png' : '/static/ai-avatar.png'\" \n            mode=\"widthFix\"\n          ></image>\n        </view>\n        <view \n          class=\"message-bubble\" \n          :class=\"{ voice: msg.isVoice }\"\n          @click=\"msg.isVoice && playVoice(msg, index)\"\n        >\n          <template v-if=\"msg.isVoice\">\n            <view class=\"voice-content\">\n              <view class=\"voice-wave\" :class=\"{ playing: msg.isPlaying }\">\n                <view class=\"wave-bar\"></view>\n                <view class=\"wave-bar\"></view>\n                <view class=\"wave-bar\"></view>\n              </view>\n              <text class=\"voice-duration\">{{ msg.duration }}\"</text>\n            </view>\n          </template>\n          <template v-else>\n            <text>{{ msg.content }}</text>\n          </template>\n        </view>\n      </view>\n      \n      <!-- 加载状态 -->\n      <view class=\"loading-indicator\" v-if=\"isLoading\">\n        <view class=\"loading-dot\"></view>\n        <view class=\"loading-dot\"></view>\n        <view class=\"loading-dot\"></view>\n      </view>\n    </scroll-view>\n    \n    <!-- 输入区域 -->\n    <view class=\"input-container\" :style=\"{ transform: showSidebar ? 'translateX(70%)' : 'translateX(0)' }\">\n      <!-- 主输入栏 -->\n      <view class=\"input-bar\">\n        <!-- 左侧：语音/打字切换按钮 -->\n        <button \n          class=\"switch-btn\" \n          @click=\"toggleMode\"\n        >\n          {{ isTextMode ? '🎤' : '⌨️' }}\n        </button>\n        \n        <!-- 中间：输入框（默认一行） -->\n        <view class=\"input-wrapper\">\n          <!-- 文字输入模式 -->\n          <textarea \n            v-if=\"isTextMode\"\n            class=\"text-input\" \n            placeholder=\"请输入消息...\" \n            v-model=\"inputMessage\"\n            :style=\"{ height: textareaHeight + 'px' }\"\n            @input=\"adjustTextareaHeight\"\n            @focus=\"onInputFocus\"\n            @blur=\"onInputBlur\"\n            @confirm=\"sendMessage\"\n          ></textarea>\n          \n          <!-- 语音输入模式 -->\n          <view \n            v-else \n            class=\"voice-input\"\n            @touchstart=\"startRecording\"\n            @touchend=\"handleRecordEnd\"\n            @touchmove=\"handleTouchMove\"\n            @touchcancel=\"stopRecording(true)\"\n          >\n            <text class=\"voice-hint\">{{ isRecording ? '松开发送' : '按住说话' }}</text>\n          </view>\n        </view>\n        \n        <!-- 右侧：加号按钮 -->\n        <button \n          class=\"plus-btn\" \n          @click.stop=\"toggleFunctionButtons\"\n        >\n          +\n        </button>\n      </view>\n      \n      <!-- 底部功能按钮 -->\n      <view class=\"function-buttons\" v-if=\"showFunctionButtons\">\n        <view class=\"function-item\" @click=\"chooseImage\">\n          <view class=\"func-icon\">📷</view>\n          <text class=\"func-text\">相册</text>\n        </view>\n        <view class=\"function-item\" @click=\"takePhoto\">\n          <view class=\"func-icon\">📸</view>\n          <text class=\"func-text\">拍摄</text>\n        </view>\n        <view class=\"function-item\" @click=\"sendLocation\">\n          <view class=\"func-icon\">📍</view>\n          <text class=\"func-text\">位置</text>\n        </view>\n        <view class=\"function-item\" @click=\"showMore\">\n          <view class=\"func-icon\">⋮</view>\n          <text class=\"func-text\">更多</text>\n        </view>\n      </view>\n    </view>\n    \n    <!-- 语音录制提示 -->\n    <view class=\"voice-recording-toast\" v-if=\"isRecording && !showSidebar\">\n      <view class=\"recording-icon\">{{ isCancel ? '✕' : '🎤' }}</view>\n      <text class=\"recording-text\">{{ isCancel ? '松开取消' : '正在录音...' }}</text>\n      <text class=\"recording-time\">{{ recordingTime }}\"</text>\n    </view>\n  </view>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      messages: [],\n      inputMessage: '',\n      isTextMode: true,\n      isRecording: false,\n      isLoading: false,\n      scrollTop: 0,\n      showTimeDivider: true,\n      textareaHeight: 36, // 默认一行高度\n      isInputFocused: false,\n      recordingTime: 0,\n      recordingTimer: null,\n      recorderManager: null,\n      innerAudioContext: null,\n      isCancel: false,\n      startY: 0,\n      showFunctionButtons: false,\n      currentPlayingIndex: -1,\n      showSidebar: false, // 侧边栏显示状态\n      darkMode: false // 主题切换\n    };\n  },\n  onLoad() {\n    // 初始化录音和音频播放\n    this.recorderManager = uni.getRecorderManager();\n    this.innerAudioContext = uni.createInnerAudioContext();\n    this.innerAudioContext.onEnded(() => this.stopVoicePlay());\n    \n    // 监听录音完成事件\n    this.recorderManager.onStop((res) => {\n      if (!this.isCancel && this.recordingTime >= 1) {\n        this.messages.push({\n          content: '[语音消息]',\n          isUser: true,\n          isVoice: true,\n          duration: this.recordingTime,\n          filePath: res.tempFilePath,\n          isPlaying: false,\n          timestamp: Date.now()\n        });\n        this.saveHistory();\n        this.scrollToBottom();\n        this.getAIResponse('语音消息');\n      }\n    });\n    \n    // 加载历史记录\n    this.loadHistory();\n  },\n  onUnload() {\n    this.stopVoicePlay();\n    this.innerAudioContext.destroy();\n    this.saveHistory();\n  },\n  methods: {\n    // 格式化时间\n    formatTime(date) {\n      const hours = date.getHours().toString().padStart(2, '0');\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      return `${hours}:${minutes}`;\n    },\n    \n    // 加载/保存历史记录\n    loadHistory() {\n      const history = uni.getStorageSync('aiChatHistory');\n      if (history && history.length) {\n        this.messages = history;\n        this.scrollToBottom();\n        this.showTimeDivider = false;\n      }\n    },\n    saveHistory() {\n      if (this.messages.length) {\n        uni.setStorageSync('aiChatHistory', this.messages);\n      }\n    },\n    \n    // 切换语音/文字输入模式\n    toggleMode() {\n      this.isTextMode = !this.isTextMode;\n      this.inputMessage = '';\n      this.showFunctionButtons = false;\n    },\n    \n    // 发送文字消息\n    sendMessage() {\n      if (!this.isTextMode || !this.inputMessage.trim()) return;\n      \n      const userMsg = {\n        content: this.inputMessage.trim(),\n        isUser: true,\n        isVoice: false,\n        timestamp: Date.now()\n      };\n      \n      this.messages.push(userMsg);\n      this.inputMessage = '';\n      this.textareaHeight = 36;\n      this.saveHistory();\n      this.scrollToBottom();\n      this.getAIResponse(userMsg.content);\n    },\n    \n    // AI回复模拟\n    getAIResponse(input) {\n      this.isLoading = true;\n      setTimeout(() => {\n        let response = input.includes('语音') \n          ? '我收到了你的语音消息，这是回复~' \n          : `你说：\"${input}\"，这是我的回复`;\n        \n        this.messages.push({\n          content: response,\n          isUser: false,\n          isVoice: false,\n          timestamp: Date.now()\n        });\n        this.isLoading = false;\n        this.saveHistory();\n        this.scrollToBottom();\n      }, 1500);\n    },\n    \n    // 录音功能\n    startRecording(e) {\n      if (this.isTextMode) return;\n      \n      this.startY = e.touches[0].clientY;\n      this.isCancel = false;\n      this.isRecording = true;\n      this.recordingTime = 0;\n      \n      this.recorderManager.start({\n        duration: 60000,\n        format: 'mp3'\n      });\n      \n      this.recordingTimer = setInterval(() => {\n        this.recordingTime++;\n        if (this.recordingTime >= 60) this.handleRecordEnd();\n      }, 1000);\n    },\n    \n    handleRecordEnd(e) {\n      if (!this.isRecording) return;\n      \n      const currentY = e?.changedTouches?.[0]?.clientY || this.startY;\n      this.isCancel = this.startY - currentY > 50;\n      this.stopRecording(this.isCancel);\n    },\n    \n    stopRecording(cancel) {\n      if (!this.isRecording) return;\n      \n      this.recorderManager.stop();\n      this.isRecording = false;\n      clearInterval(this.recordingTimer);\n      \n      if (cancel) {\n        uni.showToast({ title: '已取消', icon: 'none' });\n      } else if (this.recordingTime < 1) {\n        uni.showToast({ title: '录音时间太短', icon: 'none' });\n      }\n      \n      setTimeout(() => {\n        this.recordingTime = 0;\n        this.isCancel = false;\n      }, 500);\n    },\n    \n    handleTouchMove(e) {\n      if (!this.isRecording) return;\n      this.isCancel = this.startY - e.touches[0].clientY > 50;\n    },\n    \n    // 语音播放\n    playVoice(msg, index) {\n      if (this.currentPlayingIndex === index) {\n        this.stopVoicePlay();\n        return;\n      }\n      \n      this.stopVoicePlay();\n      this.currentPlayingIndex = index;\n      this.messages[index].isPlaying = true;\n      \n      if (msg.filePath) {\n        this.innerAudioContext.src = msg.filePath;\n        this.innerAudioContext.play();\n      } else {\n        setTimeout(() => this.stopVoicePlay(), msg.duration * 1000);\n      }\n    },\n    \n    stopVoicePlay() {\n      if (this.currentPlayingIndex !== -1) {\n        this.messages[this.currentPlayingIndex].isPlaying = false;\n        this.innerAudioContext.stop();\n        this.currentPlayingIndex = -1;\n      }\n    },\n    \n    // 调整文本框高度\n    adjustTextareaHeight(e) {\n      // 限制最大高度为3行\n      const height = e.target.scrollHeight;\n      this.textareaHeight = height > 108 ? 108 : height;\n    },\n    \n    // 滚动到底部\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const query = uni.createSelectorQuery().in(this);\n        query.select('.chat-container').boundingClientRect(data => {\n          this.scrollTop = data.scrollHeight;\n        }).exec();\n      });\n    },\n    \n    // 输入框聚焦/失焦\n    onInputFocus() {\n      this.isInputFocused = true;\n      this.showFunctionButtons = false;\n    },\n    onInputBlur() {\n      this.isInputFocused = false;\n    },\n    \n    // 切换底部功能按钮\n    toggleFunctionButtons() {\n      if (this.isInputFocused) {\n        uni.hideKeyboard();\n        this.isInputFocused = false;\n      }\n      this.showFunctionButtons = !this.showFunctionButtons;\n    },\n    \n    // 功能按钮操作\n    chooseImage() {\n      this.showFunctionButtons = false;\n      uni.chooseImage({ count: 1, sourceType: ['album'], success: (res) => {\n        this.messages.push({\n          content: '[图片]',\n          isUser: true,\n          isImage: true,\n          imageUrl: res.tempFilePaths[0],\n          timestamp: Date.now()\n        });\n        this.scrollToBottom();\n      }});\n    },\n    takePhoto() {\n      this.showFunctionButtons = false;\n      uni.chooseImage({ count: 1, sourceType: ['camera'], success: (res) => {\n        this.messages.push({\n          content: '[拍摄图片]',\n          isUser: true,\n          isImage: true,\n          imageUrl: res.tempFilePaths[0],\n          timestamp: Date.now()\n        });\n        this.scrollToBottom();\n      }});\n    },\n    sendLocation() {\n      this.showFunctionButtons = false;\n      uni.chooseLocation({ success: (res) => {\n        this.messages.push({\n          content: `[位置：${res.name}]`,\n          isUser: true,\n          isLocation: true,\n          timestamp: Date.now()\n        });\n        this.scrollToBottom();\n      }});\n    },\n    showMore() {\n      this.showFunctionButtons = false;\n      uni.showActionSheet({\n        itemList: ['文件', '收藏', '转账', '名片'],\n        success: (res) => {\n          const items = ['文件', '收藏', '转账', '名片'];\n          uni.showToast({ title: `选择了${items[res.tapIndex]}`, icon: 'none' });\n        }\n      });\n    },\n    \n    // 侧边栏控制（核心功能：从左向右弹出）\n    toggleSidebar() {\n      this.showSidebar = !this.showSidebar;\n      this.showFunctionButtons = false; // 侧边栏显示时隐藏功能按钮\n      \n      // 禁止背景滚动\n      const container = uni.createSelectorQuery().in(this).select('.chat-container');\n      container.fields({ scrollEnabled: true }, data => {\n        container.scrollEnabled(!this.showSidebar).exec();\n      }).exec();\n    },\n    \n    // 侧边栏菜单功能\n    clearHistory() {\n      uni.showModal({\n        title: '提示',\n        content: '确定清空聊天记录？',\n        success: (res) => {\n          if (res.confirm) {\n            this.messages = [];\n            this.scrollToBottom();\n            uni.removeStorageSync('aiChatHistory');\n            this.toggleSidebar();\n          }\n        }\n      });\n    },\n    switchTheme() {\n      this.darkMode = !this.darkMode;\n      uni.showToast({ title: this.darkMode ? '已切换深色模式' : '已切换浅色模式', icon: 'none' });\n    },\n    showSettings() {\n      uni.showToast({ title: '设置功能', icon: 'none' });\n      this.toggleSidebar();\n    },\n    showAbout() {\n      uni.showToast({ title: '关于助手 v1.0', icon: 'none' });\n      this.toggleSidebar();\n    },\n    \n    onScroll() {\n      if (this.showFunctionButtons) this.showFunctionButtons = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.chat-page {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #f5f7fa;\n  position: relative;\n  overflow: hidden; /* 隐藏侧边栏超出部分 */\n}\n\n/* 侧边弹出层样式 */\n.sidebar-mask {\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.sidebar {\n  position: fixed;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  width: 70%;\n  max-width: 300px;\n  background-color: #fff;\n  z-index: 101;\n  transform: translateX(-100%);\n  transition: transform 0.3s ease-out;\n  box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.sidebar.slideIn {\n  transform: translateX(0); /* 从左向右滑入 */\n}\n\n.sidebar-header {\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 16px;\n  border-bottom: 1px solid #eee;\n}\n\n.sidebar-title {\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n}\n\n.close-btn {\n  width: 36px;\n  height: 36px;\n  background: transparent;\n  border: none;\n  font-size: 20px;\n  color: #666;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.sidebar-menu {\n  padding-top: 10px;\n}\n\n.menu-item {\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n  color: #333;\n}\n\n.menu-item:active {\n  background-color: #f5f5f5;\n}\n\n.menu-icon {\n  font-size: 20px;\n  margin-right: 15px;\n  width: 24px;\n  text-align: center;\n}\n\n.menu-text {\n  font-size: 16px;\n}\n\n/* 顶部导航栏（含三道杠按钮） */\n.chat-header {\n  height: 48px;\n  background-color: #fff;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  align-items: center;\n  padding: 0 16px;\n  z-index: 10;\n  transition: transform 0.3s ease;\n}\n\n.menu-trigger {\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 10px;\n  padding: 0;\n}\n\n.hamburger {\n  font-size: 24px;\n  color: #333;\n}\n\n.header-content {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n}\n\n.header-title {\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n}\n\n.header-placeholder {\n  width: 50px; /* 与左侧按钮宽度一致，保持标题居中 */\n}\n\n/* 聊天内容区域（侧边栏弹出时右移） */\n.chat-container {\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n  box-sizing: border-box;\n  transition: transform 0.3s ease-out;\n  z-index: 1;\n}\n\n.time-divider {\n  text-align: center;\n  margin: 10px 0;\n}\n\n.time-divider text {\n  font-size: 12px;\n  color: #999;\n  background: #e9eaec;\n  padding: 3px 10px;\n  border-radius: 10px;\n}\n\n.message-item {\n  display: flex;\n  margin-bottom: 15px;\n  animation: fadeIn 0.3s ease;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  overflow: hidden;\n  flex-shrink: 0;\n}\n\n.avatar image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.message-bubble {\n  max-width: 70%;\n  padding: 8px 12px;\n  border-radius: 18px;\n  line-height: 1.5;\n  word-wrap: break-word;\n}\n\n.ai-message {\n  flex-direction: row;\n}\n\n.ai-message .message-bubble {\n  background: #fff;\n  margin-left: 10px;\n  border-top-left-radius: 4px;\n  box-shadow: 0 1px 2px rgba(0,0,0,0.05);\n}\n\n.user-message {\n  flex-direction: row-reverse;\n}\n\n.user-message .message-bubble {\n  background: #95ec69;\n  margin-right: 10px;\n  border-top-right-radius: 4px;\n}\n\n/* 语音消息样式 */\n.voice-content {\n  display: flex;\n  align-items: center;\n  padding: 5px 0;\n}\n\n.voice-wave {\n  display: flex;\n  align-items: center;\n  gap: 3px;\n  margin-right: 10px;\n}\n\n.voice-wave.playing .wave-bar {\n  animation: wave 1s infinite ease-in-out;\n}\n\n.wave-bar {\n  width: 3px;\n  height: 20px;\n  background: currentColor;\n  border-radius: 3px;\n}\n\n.wave-bar:nth-child(2) {\n  height: 30px;\n  animation-delay: 0.2s;\n}\n\n.wave-bar:nth-child(3) {\n  height: 15px;\n  animation-delay: 0.4s;\n}\n\n@keyframes wave {\n  0%, 100% { transform: scaleY(0.5); }\n  50% { transform: scaleY(1); }\n}\n\n.voice-duration {\n  font-size: 14px;\n  opacity: 0.8;\n}\n\n/* 加载动画 */\n.loading-indicator {\n  display: flex;\n  justify-content: center;\n  padding: 10px 0;\n}\n\n.loading-dot {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: #999;\n  margin: 0 4px;\n  animation: bounce 1.4s infinite;\n}\n\n.loading-dot:nth-child(2) { animation-delay: 0.2s; }\n.loading-dot:nth-child(3) { animation-delay: 0.4s; }\n\n@keyframes bounce {\n  0%, 80%, 100% { transform: scale(0); }\n  40% { transform: scale(1); }\n}\n\n/* 输入区域（侧边栏弹出时右移） */\n.input-container {\n  background: #f0f0f0;\n  border-top: 1px solid #e5e5e5;\n  transition: transform 0.3s ease-out;\n  z-index: 1;\n}\n\n/* 主输入栏 */\n.input-bar {\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n}\n\n/* 左侧：语音/打字切换按钮 */\n.switch-btn {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: #fff;\n  border: 1px solid #ddd;\n  margin-right: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  padding: 0;\n}\n\n/* 中间：输入框 */\n.input-wrapper {\n  flex: 1;\n  position: relative;\n}\n\n.text-input {\n  width: 100%;\n  padding: 8px 16px;\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 18px;\n  font-size: 16px;\n  resize: none;\n  box-sizing: border-box;\n  line-height: 1.5;\n}\n\n.text-input::placeholder {\n  color: #999;\n}\n\n.voice-input {\n  width: 100%;\n  height: 36px;\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #333;\n  font-size: 16px;\n}\n\n/* 右侧：加号按钮 */\n.plus-btn {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: #fff;\n  border: 1px solid #ddd;\n  margin-left: 10px;\n  font-size: 24px;\n  color: #333;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n}\n\n/* 底部功能按钮 */\n.function-buttons {\n  display: flex;\n  padding: 10px 0;\n  border-top: 1px solid #e5e5e5;\n  background: #f0f0f0;\n}\n\n.function-item {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 0;\n}\n\n.func-icon {\n  width: 50px;\n  height: 50px;\n  background: #fff;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  margin-bottom: 8px;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n}\n\n.func-text {\n  font-size: 12px;\n  color: #333;\n}\n\n/* 语音录制提示 */\n.voice-recording-toast {\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 120px;\n  height: 120px;\n  background: rgba(0,0,0,0.7);\n  border-radius: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  z-index: 90;\n}\n\n.recording-icon {\n  font-size: 40px;\n  margin-bottom: 10px;\n}\n\n.recording-text {\n  font-size: 16px;\n  margin-bottom: 5px;\n}\n\n.recording-time {\n  font-size: 14px;\n  opacity: 0.8;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n</style>","import MiniProgramPage from 'C:/Users/49820/Desktop/wxai/wxai/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}